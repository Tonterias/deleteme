import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class App {
    // public static void main(String[] args) throws Exception {
    public static void main(String[] args) {
        int[] a = { 121, 144, 19, 161, 19, 144, 19, 11 };
        int[] b = { 121, 14641, 20736, 361, 25921, 361, 20736, 361 };
        // int[] a = { 2, 4 };
        // int[] b = { 4, 16 };
        System.out.println(areSame(a, b)); // true
    }

    public static boolean areSame(int[] a, int[] b) {
        if ((a == null) || (b == null)) {
            return false;
        }
        int[] aa = Arrays.stream(a).map(n -> n * n).toArray();
        Arrays.sort(aa);
        Arrays.sort(b);
        return (Arrays.equals(aa, b));

        // if ((a == null) || (b == null)) {
        // return false;
        // }
        // List<Integer> aList = Arrays.stream(a).boxed().collect(Collectors.toList());
        // List<Integer> bList = Arrays.stream(b).boxed().collect(Collectors.toList());
        // for (Integer integerA : aList) {
        // int squared = integerA * integerA;
        // Iterator itr = bList.iterator();
        // while (itr.hasNext()) {
        // int x = (Integer) itr.next();
        // if (x == squared)
        // itr.remove();
        // }
        // }
        // return (bList.size() == 0);

        // // Creating an integer array
        // int arr[] = { 1, 2, 3, 4, 5 };

        // // Using Arrays.stream() to convert array into Stream
        // IntStream stream = Arrays.stream(arr);

        // // Displaying elements in Stream
        // stream.forEach(str -> System.out.print(str + " "));

        return true;
    }
}

// Given two arrays a and b write a function comp(a, b) (compSame(a, b)
// in Clojure) that checks whether the two arrays have the "same" elements,
// with the same multiplicities. "Same" means, here, that the elements in b
// are the elements in a squared, regardless of the order.
// a = [121, 144, 19, 161, 19, 144, 19, 11]
// b = [121, 14641, 20736, 361, 25921, 361, 20736, 361]
